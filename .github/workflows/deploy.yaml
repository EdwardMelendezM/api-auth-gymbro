name: Docker build and push to Artifact Registry

env:
  PROJECT_ID: pragmatic-zoo-425418-a3
  GAR_LOCATION: us-east4
  REPOSITORY: infocode1901
  IMAGE: api-auth

jobs:

  version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Get latest tag
        id: latest_tag
        run: |
          VERSION_PREFIX="v"
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "$VERSION_PREFIX0.0.0")
          echo "tag=$LATEST_TAG" >> $GITHUB_ENV

      - name: Calculate new tag and push
        run: |
          VERSION="${{ env.tag }}"
          if [[ "$VERSION" == ".0.0" ]]; then
            VERSION="v1.0.0"
          elif [[ "$VERSION" == *v* ]]; then
            MAJOR=$(echo "$VERSION" | cut -d. -f1 | sed 's/v//')
            MINOR=$(echo "$VERSION" | cut -d. -f2)
            PATCH=$(echo "$VERSION" | cut -d. -f3)
            if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
              PATCH=$((PATCH + 1))
            elif [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
              MINOR=$((MINOR + 1))
              PATCH=0
            fi
            VERSION="v${MAJOR}.${MINOR}.${PATCH}"
          fi
          echo "New version: $VERSION"
          git tag "$VERSION"
          git push origin "$VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

  login-build-push:
    branch: master
    name: Docker login, build, and push
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Get latest tag
        id: latest_tag
        run: |
          VERSION_PREFIX="v"
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "$VERSION_PREFIX0.0.0")
          if [ "$LATEST_TAG" = "$VERSION_PREFIX0.0.0" ]; then
            echo "No valid tag found. Latest tag: $LATEST_TAG"
            exit 1
          fi
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: us-west2-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Docker build and push container
        run: |-
          gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev --quiet
          docker build \
            --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:${{ env.LATEST_TAG }}" ./
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:${{ env.LATEST_TAG }}"
