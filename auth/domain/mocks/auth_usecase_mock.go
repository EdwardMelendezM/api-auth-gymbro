// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package auth

import (
	domain "github.com/EdwardMelendezM/api-auth/auth/domain"
	mock "github.com/stretchr/testify/mock"
)

// AuthUseCase is an autogenerated mock type for the AuthUseCase type
type AuthUseCase struct {
	mock.Mock
}

// Login provides a mock function with given fields: body
func (_m *AuthUseCase) Login(body domain.LoginBody) *string {
	ret := _m.Called(body)

	var r0 *string
	if rf, ok := ret.Get(0).(func(domain.LoginBody) *string); ok {
		r0 = rf(body)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*string)
		}
	}

	return r0
}

// NewAuthUseCase creates a new instance of AuthUseCase. It also registers a testing interfaces on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAuthUseCase(t interface {
	mock.TestingT
	Cleanup(func())
}) *AuthUseCase {
	mock := &AuthUseCase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
